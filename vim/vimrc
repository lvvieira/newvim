"==================
" VIM CONFIGURATION
"==================

autocmd bufwritepost,filewritepost .vimrc source $MYVIMRC
"autocmd! VimEnter * :SetColor all
autocmd! VimEnter * :colorscheme zenburn

if has('win32') || has ('win64')

   let $VIMHOME = $VIM."/vimfiles"

else

   let $VIMHOME = $HOME."/.vim"

endif

let $RC = $VIMHOME."/vimrc"
let $VIMCONFIG = $VIMHOME."/config"
let $DOC = "/home/lucas/Documents"

let mapleader= ","
"========================
" SOURCING EXTERNAL FILES
"========================
" Following files should be located at $VIMCONFIG

source $VIMCONFIG/functions.vim
for file in [
               \ "core/1_keys",
               \ "core/2_settings",
               \ "core/3_plugin-manager",
               \ "core/4_colors",
               \ "core/5_statusline",
               \
               \ "navegation",
               \ "insertion",
               \ "copy",
               \ "paste",
               \ "selection",
               \ "exit-save",
               \ "deletion",
               \ "search-replace",
               \ "word",
               \ "quick-pairing",
               \ "create-and-move",
               \ "comments",
               \ "folds",
               \ "headers",
               \ "nerdtree",
               \ "spellcheck",
               \ "split",
               \ "tabs",
               \ "utils",
               \
               \ "skel/skel",
               \ "languages/latex",
               \ "languages/python",
               \ "languages/bash",
               \ "languages/html",
\]
   execute ':call AddFile("' . file . '")'
endfor

if has("unix")
    function! FontSizePlus ()
      let l:gf_size_whole = matchstr(&guifont, '\( \)\@<=\d\+$')
      let l:gf_size_whole = l:gf_size_whole + 1
      let l:new_font_size = ' '.l:gf_size_whole
      let &guifont = substitute(&guifont, ' \d\+$', l:new_font_size, '')
    endfunction

    function! FontSizeMinus ()
      let l:gf_size_whole = matchstr(&guifont, '\( \)\@<=\d\+$')
      let l:gf_size_whole = l:gf_size_whole - 1
      let l:new_font_size = ' '.l:gf_size_whole
      let &guifont = substitute(&guifont, ' \d\+$', l:new_font_size, '')
    endfunction
else
    function! FontSizePlus ()
      let l:gf_size_whole = matchstr(&guifont, '\(:h\)\@<=\d\+$')
      let l:gf_size_whole = l:gf_size_whole + 1
      let l:new_font_size = ':h'.l:gf_size_whole
      let &guifont = substitute(&guifont, ':h\d\+$', l:new_font_size, '')
    endfunction

    function! FontSizeMinus ()
      let l:gf_size_whole = matchstr(&guifont, '\(:h\)\@<=\d\+$')
      let l:gf_size_whole = l:gf_size_whole - 1
      let l:new_font_size = ':h'.l:gf_size_whole
      let &guifont = substitute(&guifont, ':h\d\+$', l:new_font_size, '')
    endfunction
endif


if has("gui_running")
    nmap <S-F12> :call FontSizeMinus()<CR>
    nmap <F12> :call FontSizePlus()<CR>
endif

"replace everything
noremap <expr> ca ':%s/' . input("Replace: ") . '/' . input("To: ") . '/g<CR>'

